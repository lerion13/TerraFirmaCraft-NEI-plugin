buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath group: 'com.github.rodionmoiseev.gradle.plugins', name: 'idea-utils', version: '0.2'
    }
}

import groovy.json.*

configurations {
    compile
    deployJars
}

apply plugin: 'java'
apply plugin: "forge"
apply plugin: "idea-utils"

group = "net.dries007.tfcnei"
version = "1.1.0"

targetCompatibility = 1.7
sourceCompatibility = 1.7

archivesBaseName = 'TerraFirmaCraftNEIplugin'
def githuborg = 'dries007'
def description = 'TerraFirmaCraft + NEI = <3'
minecraft {
    version = "1.7.10-10.13.1.1217"
    runDir = "run"
	at('lib_jars/tfc_at.cfg')
}

dependencies {
	compile fileTree(dir: 'lib_jars', includes: ['*.jar'], excludes: ['*-src*.jar', '*.txt']) 
}

if (System.getenv().BUILD_NUMBER != null) version += "." + System.getenv().BUILD_NUMBER

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'modid':project.archivesBaseName, 'githuborg':githuborg, 'description':description
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
    }
}

task sourcesJar(type: Jar) {
    from "LICENSE.txt"
    from sourceSets.main.allSource
    classifier = 'src'
    appendix = project.minecraft.version
}

// Copy libs to the mods folder
task copyChicken(type: Copy, dependsOn: "extractUserDev") {
    from { configurations.compile }
    include "**/*Chicken*.jar", "**/*NotEnoughItems*.jar", "**/*TerraFirmaCraft*.jar"
	exclude "**/*-src*.jar" // No src jars in the mods folder
    into file(minecraft.runDir + "/mods")

    mustRunAfter "deobfBinJar"
    mustRunAfter "repackMinecraft"
}
tasks.setupDevWorkspace.dependsOn copyChicken
tasks.setupDecompWorkspace.dependsOn copyChicken

task deobfJar(type: Jar) {
    from "LICENSE.txt"
    from sourceSets.main.output
    from (sourceSets.main.allSource.srcDirs) {
        include '**/*.java'
    }
	classifier = 'dev'
    appendix = project.minecraft.version
}

jar {
    from "LICENSE.txt"
    appendix = project.minecraft.version
}

artifacts {
	archives jar
    archives sourcesJar
    archives deobfJar
}

idea {
    project {
        copyright {
            name = 'Modified BSD License'
            license = file('LICENSE.txt')
        }
    }
}